[project]
authors = [
    {name = "Timothy Pogue", email = "tim@emergentmethods.ai"},
]
license = {text = "MIT"}
requires-python = "<4.0,>=3.10"
dependencies = [
    "pyyaml>=6.0",
    "python-rapidjson>=1.10",
    "pydantic>=1.8,<3.0",
    "python-dotenv>=1.0.0",
    "fsspec>=2024.10.0",
    "toml>=0.10.2",
]
name = "python-manifest"
version = "2.3.3"
description = "A modern toolkit for working with application manifests and configurations."
readme = "README.md"

[project.urls]
repository = "https://github.com/emergentmethods/python-manifest"

[dependency-groups]
dev = [
    "mypy>=1.2.0",
    "types-pyyaml>=6.0.12.9",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "mkdocs>=1.4.3",
    "mkdocs-material>=9.1.15",
    "mkdocstrings[python]>=0.22.0",
    "coverage>=7.2.7",
    "types-toml>=0.10.8.6",
    "pre-commit>=4.0.1",
    "ruff>=0.6.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["manifest"]

[tool.ruff]
line-length = 100
exclude = ["tests"]

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.isort]
lines-after-imports = 2

[tool.mypy]
plugins = "pydantic.mypy"
ignore_missing_imports = "True"

[tool.pytest.ini_options]
addopts = "-s -p no:warnings"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
log_cli = "True"
log_auto_indent = "False"

[tool.coverage.run]
source = ["manifest"]
omit = [
    "manifest/pydantic.py",
]

[tool.coverage.report]
ignore_errors = "true"

[tool.coverage.xml]
output = "coverage.xml"
